From ed39e8fb63bcdb837e3f131140d2d73d02095ca1 Mon Sep 17 00:00:00 2001
From: Steve Lhomme <robux4@videolan.org>
Date: Thu, 28 May 2020 10:55:24 +0200
Subject: [PATCH] meson: favor _aligned_malloc over posix_memalign

posix_memalign is defined as a built-in in gcc in msys2 but it's not available
when linking with the Universal C Runtime. _aligned_malloc is available in the
UCRT.

That should only affect builds targeting Windows since _aligned_malloc is a MS
thing.
---
 meson.build | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/meson.build b/meson.build
index 65bea09..25f037f 100644
--- a/meson.build
+++ b/meson.build
@@ -196,10 +196,10 @@ else
     getopt_dependency = []
 endif
 
-if cc.has_function('posix_memalign', prefix : '#include <stdlib.h>', args : test_args)
-    cdata.set('HAVE_POSIX_MEMALIGN', 1)
-elif cc.has_function('_aligned_malloc', prefix : '#include <malloc.h>', args : test_args)
+if cc.has_function('_aligned_malloc', prefix : '#include <malloc.h>', args : test_args)
     cdata.set('HAVE_ALIGNED_MALLOC', 1)
+elif cc.has_function('posix_memalign', prefix : '#include <stdlib.h>', args : test_args)
+    cdata.set('HAVE_POSIX_MEMALIGN', 1)
 elif cc.has_function('memalign', prefix : '#include <malloc.h>', args : test_args)
     cdata.set('HAVE_MEMALIGN', 1)
 endif
-- 
2.26.0.windows.1

